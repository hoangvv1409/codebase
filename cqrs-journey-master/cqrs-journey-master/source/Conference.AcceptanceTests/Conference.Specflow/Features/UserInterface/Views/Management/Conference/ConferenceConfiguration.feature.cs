// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Conference.Specflow.Features.UserInterface.Views.Management.Conference
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ConferenceConfigurationScenariosForCreatingAndEditingConferenceSettingsFeature : Xunit.IUseFixture<ConferenceConfigurationScenariosForCreatingAndEditingConferenceSettingsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ConferenceConfiguration.feature"
#line hidden
        
        public ConferenceConfigurationScenariosForCreatingAndEditingConferenceSettingsFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Conference configuration scenarios for creating and editing Conference settings", "In order to create or update a Conference configuration\r\nAs a Business Customer\r\n" +
                    "I want to be able to create or update a Conference and set its properties", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 20
#line 21
testRunner.Given("the Business Customer selected the Create Conference option");
#line hidden
        }
        
        public virtual void SetFixture(ConferenceConfigurationScenariosForCreatingAndEditingConferenceSettingsFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Conference configuration scenarios for creating and editing Conference settings")]
        [Xunit.TraitAttribute("Description", "An existing unpublished Conference is selected and published")]
        public virtual void AnExistingUnpublishedConferenceIsSelectedAndPublished()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An existing unpublished Conference is selected and published", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 20
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Owner",
                        "Email",
                        "Name",
                        "Description",
                        "Slug",
                        "Start",
                        "End"});
            table1.AddRow(new string[] {
                        "Gregory Weber",
                        "gregoryweber@contoso.com",
                        "CQRS2012P",
                        "CQRS summit 2012 conference (Published)",
                        "random",
                        "05/02/2012",
                        "05/12/2012"});
#line 24
testRunner.Given("this conference information", ((string)(null)), table1);
#line 27
testRunner.And("the Business Customer proceed to create the Conference");
#line 28
testRunner.When("the Business Customer proceed to publish the Conference");
#line 29
testRunner.Then("the state of the Conference change to Published");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Conference configuration scenarios for creating and editing Conference settings")]
        [Xunit.TraitAttribute("Description", "An existing Conference is edited and updated")]
        public virtual void AnExistingConferenceIsEditedAndUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An existing Conference is edited and updated", ((string[])(null)));
#line 31
this.ScenarioSetup(scenarioInfo);
#line 20
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Owner",
                        "Email",
                        "Name",
                        "Description",
                        "Slug",
                        "Start",
                        "End"});
            table2.AddRow(new string[] {
                        "Gregory Weber",
                        "gregoryweber@contoso.com",
                        "CQRS2012U",
                        "CQRS summit 2012 conference (Original)",
                        "random",
                        "05/02/2012",
                        "05/12/2012"});
#line 32
testRunner.Given("an existing published conference with this information", ((string)(null)), table2);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table3.AddRow(new string[] {
                        "CQRS summit 2012 conference (Updated)"});
#line 35
testRunner.And("the Business Customer proceed to edit the existing settigns with this information" +
                    "", ((string)(null)), table3);
#line 38
testRunner.When("the Business Customer proceed to save the changes");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table4.AddRow(new string[] {
                        "CQRS summit 2012 conference (Updated)"});
#line 39
testRunner.Then("this information is show up in the Conference settings", ((string)(null)), table4);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Conference configuration scenarios for creating and editing Conference settings")]
        [Xunit.TraitAttribute("Description", "Access an existing Conference")]
        public virtual void AccessAnExistingConference()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Access an existing Conference", ((string[])(null)));
#line 44
this.ScenarioSetup(scenarioInfo);
#line 20
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Owner",
                        "Email",
                        "Name",
                        "Description",
                        "Slug",
                        "Start",
                        "End"});
            table5.AddRow(new string[] {
                        "Gregory Weber",
                        "gregoryweber@contoso.com",
                        "CQRS2012A",
                        "CQRS summit 2012 conference (Access)",
                        "random",
                        "05/02/2012",
                        "05/12/2012"});
#line 45
testRunner.Given("an existing published conference with this information", ((string)(null)), table5);
#line 48
testRunner.When("the Business Customer proceed to get access to the conference settings");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Owner",
                        "Email",
                        "Name",
                        "Description",
                        "Slug",
                        "Start",
                        "End"});
            table6.AddRow(new string[] {
                        "Gregory Weber",
                        "gregoryweber@contoso.com",
                        "CQRS2012A",
                        "CQRS summit 2012 conference (Access)",
                        "random",
                        "05/02/2012",
                        "05/12/2012"});
#line 49
testRunner.Then("this information is show up in the Conference settings", ((string)(null)), table6);
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ConferenceConfigurationScenariosForCreatingAndEditingConferenceSettingsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ConferenceConfigurationScenariosForCreatingAndEditingConferenceSettingsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
